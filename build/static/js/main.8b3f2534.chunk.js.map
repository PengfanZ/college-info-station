{"version":3,"sources":["pages/Home.js","img/admission.jpg","img/size.jpg","img/cost.jpg","img/graduation.jpg","img/future.jpg","img/college.jpg","pages/CollegeInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","state","title","searchValue","redirect","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","alert","console","log","push","to","pathname","search","className","id","onSubmit","type","onChange","placeholder","data-dismiss","style","marginBottom","href","Component","CollegeInfo","CollegeName","location","AdmissionRate","City","Ownership","HomePage","EncodedName","encodeURIComponent","AverageSat","Enrollment","InStateTuition","OutStateTuition","MedianEarning","NumOfGradStudent","Biology","Business","Computer","Education","Engineering","History","Mathematics","PhysicalScience","SocialScience","exist","error","isLoaded","name","urlFront","fetch","then","res","json","result","metadata","total","results","ownership","message","maxWidth","src","college","alt","admission","data","toFixed","color","totalValue","animate","lineWidth","label","dataEntry","labelStyle","opacity","pointerEvents","fontSize","labelPosition","height","startAngle","animationDuration","sizeImage","cost","graduation","future","paddingBottom","paddingTop","exact","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b3f2534.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Redirect} from \"react-router-dom\";\n//import CollegeInfo from './CollegeInfo';\n\nclass Home extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          title: 'College',\n          searchValue: '',\n          redirect: null\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange (event) {\n        this.setState({searchValue: event.target.value});\n    }\n\n    handleSubmit (event) {\n        event.preventDefault();\n        if (this.state.searchValue)\n            this.setState({redirect: '/CollegeInfo'})\n        else\n            alert(\"Please Input A College Name\");\n    }\n\n    render (){\n        if (this.state.redirect){\n            console.log(this.state.searchValue);\n            return (\n                <div>\n                    <Redirect push to={{\n                        pathname: this.state.redirect,\n                        search: this.state.searchValue,\n                        state: {searchValue: this.state.searchValue}\n                    }}/>\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"h-100 d-flex align-items-center flex-column justify-content-center fixed-top\" id=\"header\">\n                    <h3 className=\"display-4\">Start Your Journey Here</h3>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"form-group\">\n                            <input type=\"search\" className=\"form-control form-control-xl\" value={this.state.searchValue} \n                            onChange={this.handleChange} placeholder='Type a US college name'></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" className=\"btn btn-success btn-block btn-lg\" value=\"Go\"></input>\n                        </div>\n                        <div className=\"alert alert-dismissible alert-warning fade show\">\n                            Please don't include any punctuation mark and Please type in the full name of the college\n                            <button type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button>\n                        </div>\n                    </form>\n                    <div className=\"jumbotron text-center fixed-bottom\" style={{marginBottom:0}}>\n                        <p>Supported by <a href=\"https://collegescorecard.ed.gov/data/documentation/\">College Scorecard API</a> | All data are from 2018</p>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","export default __webpack_public_path__ + \"static/media/admission.b2177974.jpg\";","export default __webpack_public_path__ + \"static/media/size.0b6778ff.jpg\";","export default __webpack_public_path__ + \"static/media/cost.b14905d7.jpg\";","export default __webpack_public_path__ + \"static/media/graduation.0c2964d6.jpg\";","export default __webpack_public_path__ + \"static/media/future.443e2185.jpg\";","export default __webpack_public_path__ + \"static/media/college.0c81e9df.jpg\";","import React, {Component} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport { PieChart } from 'react-minimal-pie-chart';\nimport admission from '../img/admission.jpg';\nimport sizeImage from '../img/size.jpg';\nimport cost from '../img/cost.jpg';\nimport graduation from '../img/graduation.jpg';\nimport future from '../img/future.jpg';\nimport college from '../img/college.jpg';\n\nclass CollegeInfo extends Component{\n    constructor (props){\n        super (props);\n        this.state = {\n            CollegeName:  this.props.location.state.searchValue,\n            AdmissionRate: '',\n            City: '',\n            Ownership: null,\n            HomePage: '',\n            //e.g. ?New%20York%20University\n            EncodedName: encodeURIComponent(this.props.location.state.searchValue),\n            AverageSat: null,\n            Enrollment: null,\n            InStateTuition: null,\n            OutStateTuition: null,\n            \"4 Year Graduation Rate\": null,\n            MedianEarning: null,\n            NumOfGradStudent: null,\n            //academics\n            Biology: 0,\n            Business: 0,\n            Computer: 0,\n            Education: 0,\n            Engineering: 0,\n            History: 0,\n            Mathematics: 0,\n            PhysicalScience: 0,\n            SocialScience: 0,\n            //school id (unique)\n            id: null,\n            exist: true,\n            //not for college info\n            error: null,\n            isLoaded: false\n        };\n    }\n\n    componentDidMount() {\n        let name='';\n        const urlFront=\"https://api.data.gov/ed/collegescorecard/v1/schools.json?api_key=jGYsoKv4bJJ0H8EgaPYnpshgESDIaK0V4e9UfXs1\";\n        //Got School id\n        fetch(urlFront+\"&school.name=\"+this.state.EncodedName+\"&fields=id,school.name\")\n            .then(res => res.json())\n            .then(result => {\n                if (result.metadata.total === 0){\n                    alert(\"The school does not exist in U.S.\");\n                    this.setState({exist: false});\n                }\n                else{\n                    name = result.results[0][\"school.name\"];\n                    if (name===this.state.CollegeName || name===(this.state.CollegeName+\"-Main Campus\")){\n                        this.setState ({id: result.results[0].id});\n                        //this.setState({isLoaded: true});\n                        console.log(name+\" \"+this.state.id);\n                        fetch(urlFront+\"&id=\"+this.state.id+\"&fields=school.city,school.school_url,\"+\n                        \"school.ownership,2018.admissions.admission_rate.overall,2018.admissions.sat_scores.average.overall,\"+\n                        \"2018.student.size,2018.cost.tuition.out_of_state,2018.completion.completion_rate_4yr_150nt,\"+\n                        \"2007.earnings.10_yrs_after_entry.median,2018.student.grad_students,2018.cost.tuition.in_state,\"+\n                        \"2018.academics.program_percentage.computer,2018.academics.program_percentage.education,\"+\n                        \"2018.academics.program_percentage.engineering,2018.academics.program_percentage.biological,\"+\n                        \"2018.academics.program_percentage.mathematics,2018.academics.program_percentage.social_science,\"+\n                        \"2018.academics.program_percentage.business_marketing,2018.academics.program_percentage.history,\"+\n                        \"2018.academics.program_percentage.physical_science\")\n                        .then(res => res.json())\n                        .then(result => {\n                            console.log(result);\n                            //Judge Ownership\n                            let ownership;\n                            if (result.results[0][\"school.ownership\"]===1)\n                                ownership=\"Public\";\n                            else if (result.results[0][\"school.ownership\"]===2)\n                                ownership=\"Private Nonprofit\";\n                            else\n                                ownership=\"Private For-profit\";\n                            this.setState ({\n                                isLoaded: true,\n                                AdmissionRate: result.results[0][\"2018.admissions.admission_rate.overall\"],\n                                City: result.results[0][\"school.city\"],\n                                Ownership: ownership,\n                                HomePage: result.results[0][\"school.school_url\"],\n                                OutStateTuition: result.results[0][\"2018.cost.tuition.out_of_state\"],\n                                InStateTuition: result.results[0][\"2018.cost.tuition.in_state\"],\n                                \"4 Year Graduation Rate\": result.results[0][\"2018.completion.completion_rate_4yr_150nt\"],\n                                MedianEarning: result.results[0][\"2007.earnings.10_yrs_after_entry.median\"],\n                                NumOfGradStudent: result.results[0][\"2018.student.grad_students\"],\n                                Enrollment: result.results[0][\"2018.student.size\"], \n                                AverageSat: result.results[0][\"2018.admissions.sat_scores.average.overall\"],\n                                Biology: result.results[0][\"2018.academics.program_percentage.biological\"],\n                                Business: result.results[0][\"2018.academics.program_percentage.business_marketing\"],\n                                Computer: result.results[0][\"2018.academics.program_percentage.computer\"],\n                                Education: result.results[0][\"2018.academics.program_percentage.education\"],\n                                Engineering: result.results[0][\"2018.academics.program_percentage.engineering\"],\n                                History: result.results[0][\"2018.academics.program_percentage.history\"],\n                                Mathematics: result.results[0][\"2018.academics.program_percentage.mathematics\"],\n                                PhysicalScience: result.results[0][\"2018.academics.program_percentage.physical_science\"],\n                                SocialScience: result.results[0][\"2018.academics.program_percentage.social_science\"]\n                            });\n                        });\n                    }\n                    else{\n                        alert(\"Please input a correct or full US College Name\");\n                        this.setState({exist: false});    \n                    }\n                }\n            }, (error) => {\n                this.setState({error: error, isLoaded: true});\n            })\n    }\n\n\n    render () {\n        //console.log(this.state.EncodedName);\n        if (!this.state.exist) \n            return (<Redirect exact to='/' />);\n        else if (!this.state.isLoaded){\n            return (\n                <div className=\"loader \"></div>\n            );\n        }\n        else if (this.state.error){\n            return <div>Error: {this.state.error.message}</div>;\n        }\n        else{\n            return (\n                <div>\n                <div className=\"container-md my-5 pt-5 pt-md-0\">\n                    <h2 className=\"py-5\">{this.state.CollegeName}</h2>\n\n                    <div className=\"row\">\n                        <div className='col-lg-6'>\n                            <div className=\"card bg-light mb-3\" style={{maxWidth: \"23rem\"}}>\n                            <img src={college} className=\"card-img-top\" alt=\"college\" />\n                            <div className=\"card-header\">Basic Info</div>\n                            <div className=\"card-body\">\n                                <ul className=\"list-group list-group-flush\">\n                                    <li className=\"list-group-item\">City/Region: {this.state.City}</li>\n                                    <li className=\"list-group-item\">Ownership: {this.state.Ownership}</li>\n                                    <li className=\"list-group-item\">School HomePage: <a href={\"https://\"+this.state.HomePage}>{this.state.HomePage}</a></li>\n                                </ul>\n                            </div>\n                            </div>\n                        </div>\n\n                        <div className='col-lg-6'>\n                            <div className=\"card border-info mb-3\" style={{maxWidth: \"23rem\"}}>\n                                <img src={admission} className=\"card-img-top\" alt=\"Admission\" />\n                                <div className=\"card-header\">Admission</div>\n                                <div className=\"card-body\">\n                                    <label>Admission Rate:</label>\n                                    <PieChart \n                                        data={[\n                                            {title: 'admitted students', value: (this.state.AdmissionRate*100).toFixed(2), color: '#ff6361'},\n                                        ]} \n                                        totalValue={100}\n                                        animate\n                                        lineWidth={20} \n                                        label={({ dataEntry }) => (dataEntry.value) + '%'}\n                                        labelStyle={{\n                                            opacity: 0.75,\n                                            pointerEvents: 'none',\n                                            fontSize: \"1em\"\n                                        }}\n                                        labelPosition={0} \n                                        style={{ height: '150px'  }} \n                                        startAngle={180}\n                                        animationDuration={2000}\n                                    />\n\n                                    <label>Average SAT Scores:</label>\n                                    <PieChart\n                                        data={[\n                                            {title: 'Average Sat Score', value: this.state.AverageSat, color: '#29B6F6'},\n                                        ]} \n                                        totalValue={1600}\n                                        animate\n                                        lineWidth={20} \n                                        label={({ dataEntry }) => dataEntry.value}\n                                        labelStyle={{\n                                            opacity: 0.75,\n                                            pointerEvents: 'none',\n                                            fontSize: \"1em\"\n                                        }}\n                                        labelPosition={0} \n                                        style={{ height: '150px'  }} \n                                        startAngle={0}\n                                        animationDuration={2000}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-lg\">\n                            <div className=\"card bg-info mb-3 text-white\" style={{maxWidth: \"23rem\"}}>\n                                <img src={sizeImage} className=\"card-img-top\" alt=\"student size\" />\n                                <div className=\"card-header\">Size</div>\n                                <div className=\"card-body\">\n                                    <ul>\n                                        <li>Undergraduate Student Size: {this.state.Enrollment}</li>\n                                        <li>Grad Student Size: {this.state.NumOfGradStudent}</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg\">\n                            <div className=\"card border-warning mb-3\" style={{maxWidth: \"23rem\"}}>\n                            <img src={cost} className=\"card-img-top\" alt=\"tuition\" />\n                            <div className=\"card-header\">Cost</div>\n                            <div className=\"card-body\">\n                                <ul className=\"list-group list-group-flush\">\n                                    <li className=\"list-group-item\">Tuition for Out-State Students: ${this.state.OutStateTuition}</li>\n                                    <li className=\"list-group-item\">Tuition for In-State Students: ${this.state.InStateTuition}</li>\n                                </ul>\n                            </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div className=\"row\">\n                        <div className=\"col-lg\">\n                            <div className=\"card text-white bg-dark mb-3\" style={{maxWidth: \"23rem\"}}>\n                            <img src={graduation} className=\"card-img-top\" alt=\"graduation\" />\n                            <div className=\"card-header\">Academics</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Percentages of Degree Awarded</h5>\n                                <ul>\n                                    <li>Biological And Biomedical Science: {(this.state.Biology*100).toFixed(2)}%</li>\n                                    <li>Business, Management, Marketing: {(this.state.Business*100).toFixed(2)}%</li>\n                                    <li>Computer And Information Sciences: {(this.state.Computer*100).toFixed(2)}%</li>\n                                    <li>Education: {(this.state.Education*100).toFixed(2)}%</li>\n                                    <li>Engineering: {(this.state.Engineering*100).toFixed(2)}%</li>\n                                    <li>History: {(this.state.History*100).toFixed(2)}%</li>\n                                    <li>Mathematics and Statistics: {(this.state.Mathematics*100).toFixed(2)}%</li>\n                                    <li>Physical Sciences: {(this.state.PhysicalScience*100).toFixed(2)}%</li>\n                                    <li>Social Science: {(this.state.SocialScience*100).toFixed(2)}%</li>\n                                </ul>\n                            </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg\">\n                            <div className=\"card border-success mb-3\" style={{maxWidth: \"23rem\"}}>\n                            <img src={future} className=\"card-img-top\" alt=\"future\" />\n                            <div className=\"card-header\">Future</div>\n                            <div className=\"card-body\">\n                            <label>Four Years Graudation Rate: </label>\n                            <PieChart\n                                data={[\n                                    {title: 'Four Year Graduation Rate', value: (this.state[\"4 Year Graduation Rate\"]*100).toFixed(2), color: \"lightgreen\" },\n                                ]} \n                                totalValue={100}\n                                animate\n                                lineWidth={20} \n                                label={({ dataEntry }) => (dataEntry.value)+\"%\"}\n                                labelStyle={{\n                                    opacity: 0.75,\n                                    pointerEvents: 'none',\n                                    fontSize: \"1em\",\n                                }}\n                                labelPosition={0} \n                                style={{ height: '150px', paddingBottom: '1em', paddingTop: '1em'  }} \n                                startAngle={0}\n                                animationDuration={2000}\n                            />\n                                <p>Median Salary 10 years after graduating: ${this.state.MedianEarning}</p>\n                            </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"jumbotron text-center container-fluid\" style={{marginBottom:0}}>\n                    <p>Supported by <a href=\"https://collegescorecard.ed.gov/data/documentation/\">College Scorecard API</a> | All data are from 2018</p>\n                </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default CollegeInfo;","import React, {Component} from 'react';\nimport Home from './pages/Home';\nimport CollegeInfo from './pages/CollegeInfo';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n  } from \"react-router-dom\";\n\nclass App extends Component {    \n  render(){\n    return (\n      <div className=\"h-100\">\n        <Router>\n          {/*navigation */}\n          <nav className=\"navbar fixed-top navbar-dark navbar-expand-md bg-primary\">\n            <span className=\"navbar-brand mb-0 h1\">College Info Station</span>\n              <div className=\"container-fluid\" id=\"navbarColor01\">\n                <div id=\"navbarNav\">\n                  <ul className=\"navbar-nav\">\n                      <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to=\"/\">Home</Link>\n                      </li>\n                  </ul>\n                </div>\n              </div>\n          </nav>\n\n          \n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route exact path='/CollegeInfo' render={(props) => <CollegeInfo {...props} />} />\n          </Switch>\n        </Router>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}